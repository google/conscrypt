apply plugin: "com.google.osdetector"

description = 'Conscrypt: OpenJdk'

ext {
    jniSourceDir = "$rootDir/common/src/jni"
    jniLibName = "conscrypt_openjdk_jni-$osdetector.classifier"
    jniLibTaskName = "${jniLibName}SharedLibrary"

    assert file("$jniSourceDir").exists()
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

sourceSets.main {
    java {
        srcDirs = [
                "${rootDir}/common/src/main/java",
                "src/main/java"
        ]
    }
}

dependencies {
    compile project(':conscrypt-constants')

    testCompile libraries.bouncycastle_provider,
                libraries.bouncycastle_apis,
                libraries.junit,
                libraries.mockito
}

// Make sure we build and copy the native library to the output directory.
compileJava.dependsOn 'copyNativeLib'

// Set the platform-specific classifier on the artifact.
jar {
    classifier = osdetector.classifier
}

model {
    components {
        // Builds the JNI library.
        "$jniLibName"(NativeLibrarySpec) {
            sources {
                cpp {
                    source {
                        srcDirs = [
                                "$jniSourceDir/unbundled/cpp",
                                "$jniSourceDir/main/cpp"
                        ]
                    }
                }
            }

            binaries {
                // Build the JNI lib as a shared library.
                withType (SharedLibraryBinarySpec) {
                    cppCompiler.define "CONSCRYPT_OPENJDK"

                    if (toolChain in Clang || toolChain in Gcc) {
                        cppCompiler.args "-Wall",
                                "-fPIC",
                                "-O2",
                                "-std=c++11",
                                "-I$jniSourceDir/main/include",
                                "-I$jniSourceDir/unbundled/include",
                                "-I$boringsslIncludeDir",
                                "-I$jdkIncludeDir",
                                "-I$jdkIncludeDir/linux",
                                "-I$jdkIncludeDir/darwin",
                                "-I$jdkIncludeDir/win32"

                        // Static link to BoringSSL
                        linker.args "-O2",
                                "-fvisibility=hidden",
                                "-L$boringsslSslBuildDir",
                                "-L$boringsslCryptoBuildDir",
                                "-lstdc++",
                                "-lssl",
                                "-lcrypto"
                    } else if (toolChain in VisualCpp) {
                        cppCompiler.define "DLL_EXPORT"
                        cppCompiler.define "WIN32_LEAN_AND_MEAN"
                        cppCompiler.define "WIN64"
                        cppCompiler.define "_WINDOWS"
                        cppCompiler.define "UNICODE"
                        cppCompiler.define "_UNICODE"
                        cppCompiler.define "NDEBUG"

                        cppCompiler.args "/nologo",
                                "/MT",
                                "/WX-",
                                "/Wall",
                                "/O2",
                                "/Oi",
                                "/Ot",
                                "/GL",
                                "/GS",
                                "/Gy",
                                "/fp:precise",
                                "-wd4548", // Expression before comma has no effect
                                "-wd4625", // Copy constructor was implicitly defined as deleted
                                "-wd4626", // Assignment operator was implicitly defined as deleted
                                "-wd4820", // Extra padding added to struct
                                "-wd4946", // reinterpret_cast used between related classes:
                                "-wd4996", // Thread safety for strerror
                                "-wd5027", // Move assignment operator was implicitly defined as deleted
                                "-I$jniSourceDir/main/include",
                                "-I$jniSourceDir/unbundled/include",
                                "-I$boringsslIncludeDir",
                                "-I$jdkIncludeDir",
                                "-I$jdkIncludeDir/win32"

                        // Static link to BoringSSL
                        linker.args "/O2",
                                "-WX",
                                "-L$boringsslSslBuildDir",
                                "-L$boringsslCryptoBuildDir",
                                "-lssl",
                                "-lcrypto",
                                "-lWs2_32.lib"
                    }
                }

                // Never build a static library.
                withType(StaticLibraryBinarySpec) {
                    buildable = false
                }
            }
        }
    }
}

// Copies the native library to a resource location that will be included in the jar.
task copyNativeLib(type: Copy, dependsOn: "$jniLibTaskName") {
    from "build/libs/${jniLibName}/shared"
    // This location will automatically be included in the jar.
    into 'build/resources/main/META-INF/native'
}
