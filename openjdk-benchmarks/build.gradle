plugins {
    id 'me.champeau.gradle.jmh' version '0.3.1'
}

apply plugin: 'idea'

description = 'Conscrypt: OpenJDK Benchmarks'

evaluationDependsOn(':conscrypt-openjdk')

def preferredNativeConfiguration = project(':conscrypt-openjdk').preferredNativeConfiguration
def preferredNativeFileDir = project(':conscrypt-openjdk').preferredNativeFileDir

sourceSets {
    main {
        resources {
            // This shouldn't be needed but seems to help IntelliJ locate the native artifact.
            srcDirs += preferredNativeFileDir
        }
    }
}

jmh {
    jmhVersion = "$jmhVersion"
    warmupIterations = 10
    iterations = 10
    fork = 1
    jvmArgs = '-server -Xms2g -Xmx2g'
    duplicateClassesStrategy = 'warn'
}

configurations {
    jmhGenerators
}

dependencies {
    compile project(':conscrypt-openjdk'),
            project(':conscrypt-testing'),
            libraries.junit,
            libraries.netty_handler,
            libraries.netty_tcnative

    // Add the preferred native openjdk configuration for this platform.
    compile project(path: ':conscrypt-openjdk', configuration: "$preferredNativeConfiguration")

    jmh libraries.jmh_core

    jmhGenerators libraries.jmh_generator_asm,
            libraries.jmh_generator_bytecode,
            libraries.jmh_generator_reflection,
            libraries.jmh_generator_annprocess
}

// Running benchmarks in IntelliJ seems broken without this.
// See https://github.com/melix/jmh-gradle-plugin/issues/39
idea.module {
    scopes.PROVIDED.plus += [ configurations.jmh, configurations.jmhGenerators ]
}

// Don't include this artifact in the distribution.
tasks.install.enabled = false
tasks.uploadArchives.enabled = false;
